package net.bouzuya.nekurabe.data

import android.database.Cursor
import androidx.room.testing.MigrationTestHelper
import androidx.test.platform.app.InstrumentationRegistry
import com.jakewharton.threetenabp.AndroidThreeTen
import org.junit.Assert
import org.junit.Before
import org.junit.Rule
import org.junit.Test
import org.threeten.bp.OffsetDateTime

fun Cursor.getOffsetDateTime(columnIndex: Int): OffsetDateTime =
    OffsetDateTimeConverter.fromLong(getLong(columnIndex))

class NekurabeDatabaseTest {
    @get:Rule
    val migrationTestHelper = MigrationTestHelper(
        InstrumentationRegistry.getInstrumentation(),
        NekurabeDatabase::class.java.canonicalName
    )

    @Before
    fun setUp() {
        val context = InstrumentationRegistry.getInstrumentation().targetContext
        AndroidThreeTen.init(context)
    }

    @Test
    fun createDatabaseVersion1() {
        migrationTestHelper.createDatabase("test-database", 1).also { database ->
            val name = "name1"
            val createdAt = OffsetDateTime.now()
            val updatedAt = createdAt.plusMinutes(5)

            database.execSQL(
                "INSERT INTO stores(name, created_at, updated_at) VALUES(?, ?, ?)",
                arrayOf(
                    name,
                    OffsetDateTimeConverter.toLong(createdAt),
                    OffsetDateTimeConverter.toLong(updatedAt)
                )
            )

            val autoGeneratedId = 1L
            val cursor = database.query(
                "SELECT id, name, created_at, updated_at FROM stores WHERE id = ?",
                arrayOf(autoGeneratedId)
            )
            cursor.moveToNext()
            Assert.assertEquals(autoGeneratedId, cursor.getLong(0)) // id
            Assert.assertEquals(name, cursor.getString(1)) // name
            Assert.assertEquals(createdAt, cursor.getOffsetDateTime(2)) // created_at
            Assert.assertEquals(updatedAt, cursor.getOffsetDateTime(3)) // updated_at
        }
    }
}
